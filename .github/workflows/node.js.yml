name: Node.js CI

on:
  push:
    branches: [ ]
  pull_request:
    branches: [ ]

env:
  SSH_KEY: ${{ secrets.SERVER_SSH_KEY }}
  SERVER_IP: ${{ secrets.SERVER_IP }}
  SERVER_USERNAME: ${{ secrets.SERVER_USERNAME }}
  APP_PATH: ${{ secrets.APP_PATH }}
  APP_NAME: d4diversity-backend
  BUILD_DIR: d4diversity-backend/build
  BRANCH: _

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]

    steps:
      
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: npm ci

      - name: Build
        run: npm run build
        working-directory: ${{ env.BUILD_DIR }}
      - name: Archive Build Artifacts
        run: |
          mkdir build-artifacts
          mv ./build/* build-artifacts/
          zip -r build-artifacts.zip build-artifacts
        working-directory: ${{ github.workspace }}

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-artifacts
          path: build-artifacts.zip
        

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-artifacts
          path: build-artifacts
      - name: SSH Remote Commands
        uses: appleboy/ssh-action@v0.1.10
        with:
          key: ${{ env.SSH_KEY }}
          host: ${{ env.SERVER_IP }}
          port: 22
          username: ${{ env.SERVER_USERNAME }}
          debug: true
          script: |
            cd ${{ env.APP_PATH }}
            git stash
            git checkout ${{ env.BRANCH }}
            git pull origin ${{ env.BRANCH }}
            git stash pop
            rm -rf ./*
            unzip -o ~/workspace/build-artifacts/build-artifacts.zip -d ./
            npm install
            pm2 stop ${{ env.APP_NAME }}
            pm2 delete ${{ env.APP_NAME }}
            pm2 start npm --name "${{ env.APP_NAME }}" -- run prod --time